apiVersion: v1
kind: Secret
metadata:
  name: {{ include "review-service.name" . }}
  labels:
    {{- include "review-service.labels" . | nindent 4 }}
  annotations:
    {{- include "review-service.argocd-syncwave" . | nindent 4 }}
type: "Opaque"
stringData:
  application.properties: |-
    kafka.bootstrap.servers={{ .Values.kafka.bootstrapServer }}

    {{- if .Values.kafka.securityProtocol }}
    mp.messaging.connector.smallrye-kafka.security.protocol={{ .Values.kafka.securityProtocol }}
    {{- end }}
    {{- if .Values.kafka.saslMechanism }}
    mp.messaging.connector.smallrye-kafka.sasl.mechanism={{ .Values.kafka.saslMechanism }}
    {{- end }}

    {{- if eq .Values.kafka.saslMechanism "PLAIN" }}
    mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
      username="{{ .Values.kafka.clientId }}" \
      password="{{ .Values.kafka.clientSecret }}" ;
    {{- end }}
    {{- if eq .Values.kafka.saslMechanism "SCRAM-SHA-512" }}
    mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
      username="{{ .Values.kafka.clientId }}" \
      password="{{ .Values.kafka.clientSecret }}" ;
    {{- end }}

    mp.messaging.outgoing.review.topic={{ .Values.kafka.topic.review }}

    quarkus.mongodb.connection-string={{ .Values.mongodb.connectionString }}
    quarkus.mongodb.database={{ .Values.mongodb.database }}
    quarkus.mongodb.credentials.username={{ .Values.mongodb.username }}
    quarkus.mongodb.credentials.password={{ .Values.mongodb.password }}

    mongodb.reviews.collection={{ .Values.mongodb.collection.reviews }}
    mongodb.summary.collection={{ .Values.mongodb.collection.summary }}

    mongodb.reviews.query.limit={{ .Values.mongodb.query.reviews.limit }}
    