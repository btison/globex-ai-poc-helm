apiVersion: v1
kind: Secret
metadata:
  name: {{ include "review-processor.name" . }}
  labels:
    {{- include "review-processor.labels" . | nindent 4 }}
  annotations:
    {{- include "review-processor.argocd-syncwave" . | nindent 4 }}
type: "Opaque"
stringData:
  application.properties: |-
    kafka.bootstrap.servers={{ .Values.kafka.bootstrapServer }}

    {{- if .Values.kafka.securityProtocol }}
    mp.messaging.connector.smallrye-kafka.security.protocol={{ .Values.kafka.securityProtocol }}
    {{- end }}
    {{- if .Values.kafka.saslMechanism }}
    mp.messaging.connector.smallrye-kafka.sasl.mechanism={{ .Values.kafka.saslMechanism }}
    {{- end }}

    {{- if eq .Values.kafka.saslMechanism "PLAIN" }}
    mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
      username="{{ .Values.kafka.clientId }}" \
      password="{{ .Values.kafka.clientSecret }}" ;
    {{- end }}
    {{- if eq .Values.kafka.saslMechanism "SCRAM-SHA-512" }}
    mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
      username="{{ .Values.kafka.clientId }}" \
      password="{{ .Values.kafka.clientSecret }}" ;
    {{- end }}

    mp.messaging.incoming.intake.topic={{ .Values.kafka.topic.intake }}
    mp.messaging.incoming.intake.group.id={{ .Values.kafka.consumerGroup.intake }}

    mp.messaging.outgoing.processed.topic={{ .Values.kafka.topic.processed }}
    mp.messaging.outgoing.error.topic={{ .Values.kafka.topic.error }}

    quarkus.rest-client.customer.url={{ .Values.customerAPI.url }}

    # LLm
    quarkus.langchain4j.openai.chat-model.model-name={{ .Values.llm.emailWriter.modelName }}
    quarkus.langchain4j.openai.api-key={{ .Values.llm.emailWriter.apiKey }}
    quarkus.langchain4j.openai.base-url={{ .Values.llm.emailWriter.baseUrl }}

    quarkus.langchain4j.openai.emailwriter.chat-model.model-name={{ .Values.llm.emailWriter.modelName }}
    quarkus.langchain4j.openai.emailwriter.api-key={{ .Values.llm.emailWriter.apiKey }}
    quarkus.langchain4j.openai.emailwriter.base-url={{ .Values.llm.emailWriter.baseUrl }}
    quarkus.langchain4j.openai.emailwriter.log-requests={{ .Values.llm.emailWriter.logRequests }}
    quarkus.langchain4j.openai.emailwriter.log-responses={{ .Values.llm.emailWriter.logResponses }}
    quarkus.langchain4j.openai.emailwriter.chat-model.temperature={{ .Values.llm.emailWriter.temperature }}
    quarkus.langchain4j.openai.emailwriter.timeout={{ .Values.llm.emailWriter.timeout }}
    quarkus.langchain4j.openai.emailwriter.chat-model.strict-json-schema={{ .Values.llm.emailWriter.strictJsonSchema }}

    quarkus.langchain4j.openai.sentiment.chat-model.model-name={{ .Values.llm.sentiment.modelName }}
    quarkus.langchain4j.openai.sentiment.api-key={{ .Values.llm.sentiment.apiKey }}
    quarkus.langchain4j.openai.sentiment.base-url={{ .Values.llm.sentiment.baseUrl }}
    quarkus.langchain4j.openai.sentiment.log-requests={{ .Values.llm.sentiment.logRequests }}
    quarkus.langchain4j.openai.sentiment.log-responses={{ .Values.llm.sentiment.logResponses }}
    quarkus.langchain4j.openai.sentiment.chat-model.temperature={{ .Values.llm.sentiment.temperature }}
    quarkus.langchain4j.openai.sentiment.timeout={{ .Values.llm.sentiment.timeout }}
    quarkus.langchain4j.openai.sentiment.chat-model.strict-json-schema={{ .Values.llm.sentiment.strictJsonSchema }}

    # LLM moderation
    quarkus.langchain4j.openai.mod.moderation-model.model-name={{ .Values.llm.moderation.modelName }}
    quarkus.langchain4j.openai.mod.api-key={{ .Values.llm.moderation.apiKey }}
    quarkus.langchain4j.openai.mod.base-url={{ .Values.llm.moderation.baseUrl }}
    quarkus.langchain4j.openai.mod.log-requests={{ .Values.llm.moderation.logRequests }}
    quarkus.langchain4j.openai.mod.log-responses={{ .Values.llm.moderation.logResponses }}
    quarkus.langchain4j.openai.mod.timeout={{ .Values.llm.moderation.timeout }}
    quarkus.langchain4j.openai.mod.max-retries={{ .Values.llm.moderation.maxRetries }}

    # Mcp
    quarkus.langchain4j.mcp.mail.url={{ .Values.mcp.mail.url }}
    quarkus.langchain4j.mcp.mail.log-requests={{ .Values.mcp.mail.logRequests }}
    quarkus.langchain4j.mcp.mail.log-responses={{ .Values.mcp.mail.logResponses }}
    quarkus.langchain4j.mcp.health.enabled={{ .Values.mcp.mail.healthEnabled }}

    # Mongo
    quarkus.mongodb.connection-string={{ .Values.mongodb.connectionString }}
    quarkus.mongodb.database={{ .Values.mongodb.database }}
    quarkus.mongodb.credentials.username={{ .Values.mongodb.username }}
    quarkus.mongodb.credentials.password={{ .Values.mongodb.password }}

    mongodb.reviews.collection={{ .Values.mongodb.collection }}

    # OIDC
    quarkus.oidc-client.auth-server-url={{ .Values.oidc.authServer }}/realms/{{ .Values.oidc.realm }}
    quarkus.oidc-client.client-id={{ .Values.oidc.clientId }}
    quarkus.oidc-client.credentials.secret={{ .Values.oidc.clientSecret }}
    quarkus.oidc-client.scopes={{ .Values.oidc.scopes }}
