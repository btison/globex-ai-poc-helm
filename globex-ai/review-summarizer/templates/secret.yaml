apiVersion: v1
kind: Secret
metadata:
  name: {{ include "review-summarizer.name" . }}
  labels:
    {{- include "review-summarizer.labels" . | nindent 4 }}
  annotations:
    {{- include "review-summarizer.argocd-syncwave" . | nindent 4 }}
type: "Opaque"
stringData:
  application.properties: |-
    kafka.bootstrap.servers={{ .Values.kafka.bootstrapServer }}

    {{- if .Values.kafka.securityProtocol }}
    mp.messaging.connector.smallrye-kafka.security.protocol={{ .Values.kafka.securityProtocol }}
    {{- end }}
    {{- if .Values.kafka.saslMechanism }}
    mp.messaging.connector.smallrye-kafka.sasl.mechanism={{ .Values.kafka.saslMechanism }}
    {{- end }}

    {{- if eq .Values.kafka.saslMechanism "PLAIN" }}
    mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
      username="{{ .Values.kafka.clientId }}" \
      password="{{ .Values.kafka.clientSecret }}" ;
    {{- end }}
    {{- if eq .Values.kafka.saslMechanism "SCRAM-SHA-512" }}
    mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
      username="{{ .Values.kafka.clientId }}" \
      password="{{ .Values.kafka.clientSecret }}" ;
    {{- end }}

    mp.messaging.incoming.intake.topic={{ .Values.kafka.topic.intake }}
    mp.messaging.incoming.intake.group.id={{ .Values.kafka.consumerGroup.intake }}

    mp.messaging.outgoing.processed.topic={{ .Values.kafka.topic.processed }}
    mp.messaging.outgoing.review.topic={{ .Values.kafka.topic.review }}
    mp.messaging.outgoing.error.topic={{ .Values.kafka.topic.error }}

    # LLm
    quarkus.langchain4j.openai.chat-model.model-name={{ .Values.llm.summary.modelName }}
    quarkus.langchain4j.openai.api-key={{ .Values.llm.summary.apiKey }}
    quarkus.langchain4j.openai.base-url={{ .Values.llm.summary.baseUrl }}

    quarkus.langchain4j.openai.summarizer.chat-model.model-name={{ .Values.llm.summary.modelName }}
    quarkus.langchain4j.openai.summarizer.api-key={{ .Values.llm.summary.apiKey }}
    quarkus.langchain4j.openai.summarizer.base-url={{ .Values.llm.summary.baseUrl }}
    quarkus.langchain4j.openai.summarizer.log-requests={{ .Values.llm.summary.logRequests }}
    quarkus.langchain4j.openai.summarizer.log-responses={{ .Values.llm.summary.logResponses }}
    quarkus.langchain4j.openai.summarizer.chat-model.temperature={{ .Values.llm.summary.temperature }}
    quarkus.langchain4j.openai.summarizer.timeout={{ .Values.llm.summary.timeout }}
    quarkus.langchain4j.openai.summarizer.chat-model.strict-json-schema={{ .Values.llm.summary.strictJsonSchema }}

    #Mongo
    quarkus.mongodb.connection-string={{ .Values.mongodb.connectionString }}
    quarkus.mongodb.database={{ .Values.mongodb.database }}
    quarkus.mongodb.credentials.username={{ .Values.mongodb.username }}
    quarkus.mongodb.credentials.password={{ .Values.mongodb.password }}

    mongodb.reviews.collection={{ .Values.mongodb.collection.reviews }}
    mongodb.summary.collection={{ .Values.mongodb.collection.summary }}

